@model AllVerseChoreographiesQueryModel
@{
	ViewBag.Title = "My Saved Verse Choreographies";
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<form method="get">
	<div class="row justify-content-between">
		<div class="col-md-2">
			<label asp-for="SearchTerm"></label>
			<input asp-for="SearchTerm" class="form-control" placeholder="Search by name...">
		</div>
		<div class="form-group col-md-2 d-flex justify-content-between">
			<div class="form-group">
				<label asp-for="VerseType"></label>
				<select asp-for="VerseType" class="form-control">
					<option value="">All</option>
					@foreach (var verseType in Model.VerseTypes)
					{
						<option value="@verseType.Id">@verseType.Name</option>
					}
				</select>
			</div>
		</div>
		<div class="form-group col-md-2 d-flex justify-content-between">
			<div class="form-group">
				<label asp-for="StartPosition"></label>
				<select asp-for="StartPosition" class="form-control">
					<option value="">All</option>
					@foreach (var position in Model.Positions)
					{
						<option value="@position.Id">@position.Name</option>
					}
				</select>
			</div>
		</div>
		<div class="form-group col-md-2 d-flex justify-content-between">
			<div class="form-group">
				<label asp-for="EndPosition"></label>
				<select asp-for="EndPosition" class="form-control">
					<option value="">All</option>
					@foreach (var position in Model.Positions)
					{
						<option value="@position.Id">@position.Name</option>
					}
				</select>
			</div>
		</div>
		<div class="form-group col-md-2 d-flex justify-content-between">
			<div class="form-group">
				<label asp-for="FinalFigure"></label>
				<select asp-for="FinalFigure" class="form-control">
					<option value="">All</option>
					@foreach (var figure in Model.Figures)
					{
						<option value="@figure.Id">@figure.Name</option>
					}
				</select>
			</div>
		</div>
		<div class="col-md-2">
			<br />
			<input type="submit" value="Search" class="btn btn-success" />
		</div>
	</div>
</form>
<br />

@if (!Model.Entities.Any())
{
	<h2 class="text-center text-danger">No saved verse choreographies found by this search criteria! Try to generate new verse choreographies.</h2>
}
else
{
	<div class="table-responsive">
		<table class="table darkbgwhitetext">
			<thead>
				<tr>
					<th scope="col">Name</th>
					<th scope="col">Verse type</th>
					<th scope="col">Start position</th>
					<th scope="col">End position</th>
					<th scope="col">Number of figures</th>
					<th scope="col">Final figure</th>
					<th scope="col"></th>
					<th scope="col"></th>
				</tr>
			</thead>
			<tbody>
				@foreach (var choreography in Model.Entities)
				{
					<tr>
						<partial name="_VerseChoreographyTablePartial" model="@choreography" />
						<td>
							@if (!choreography.UsedInFullChoreographies)
							{
								<form method="get">
									<input type="submit" asp-controller="VerseChoreography" asp-action="Delete" asp-route-id="@choreography.Id" value="Delete" class="link-danger custominputlink" />
								</form>
							}
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>

	var previousPage = Model.CurrentPage - 1;
	if (previousPage < 1)
	{
		previousPage = 1;
	}

	var maxPage = Math.Ceiling((double)Model.TotalItemCount /
		Model.ItemsPerPage);

	<div class="row mb-5">
		<div class="col-md-4 justify-content-md-start">
			<a class="btn btn-success @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
		   asp-controller="VerseChoreography"
		   asp-action="Mine"
		   asp-route-currentPage="@previousPage"
		   asp-route-searchTerm="@Model.SearchTerm"
		   asp-route-verseType="@Model.VerseType"
		   asp-route-startPosition="@Model.StartPosition"
		   asp-route-endPosition="@Model.EndPosition"
		   asp-route-finalFigure="@Model.FinalFigure">Previous page</a>
		</div>

		<div class="col-md-4 text-center">
			<p>Page @Model.CurrentPage of @maxPage</p>
		</div>

		@{
			var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
			!Model.Entities.Any();
		}

		<div class="col-md-4">
			<a class="btn btn-success float-end
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
		   asp-controller="VerseChoreography"
		   asp-action="Mine"
		   asp-route-currentPage="@(Model.CurrentPage + 1)"
		   asp-route-searchTerm="@Model.SearchTerm"
		   asp-route-verseType="@Model.VerseType"
		   asp-route-startPosition="@Model.StartPosition"
		   asp-route-endPosition="@Model.EndPosition"
		   asp-route-finalFigure="@Model.FinalFigure">Next page</a>
		</div>
	</div>
}

<a asp-controller="VerseChoreography" asp-action="Generate" class="btn btn-warning mb-2 w-100 p-3 fw-bold">Generate</a>